generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Session {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String
}

model bookmarks {
  id         Int          @id @default(autoincrement())
  link       String
  userId     Int          @default(1)
  updated_at DateTime
  created_at DateTime     @default(now())
  content    String       @default("default content")
  name       String       @default("My bookmark")
  folderId   Int
  folders    folders      @relation(fields: [folderId], references: [id], onDelete: Cascade)
  users      users        @relation(fields: [userId], references: [id], onDelete: Cascade)
  embeddings embeddings[]

  @@unique([userId, link])
}

model embeddings {
  id         Int                    @id @default(autoincrement())
  content    String
  embedding  Unsupported("vector")?
  userId     Int
  thoughtId  Int?
  updated_at DateTime
  created_at DateTime               @default(now())
  bookmarkId Int?
  bookmarks  bookmarks?             @relation(fields: [bookmarkId], references: [id], onDelete: Cascade)
  thoughts   thoughts?              @relation(fields: [thoughtId], references: [id], onDelete: Cascade)
  users      users                  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model thoughts {
  id         Int          @id @default(autoincrement())
  content    String
  userId     Int
  updated_at DateTime
  created_at DateTime     @default(now())
  embeddings embeddings[]
  users      users        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model users {
  id          Int          @id @default(autoincrement())
  telegram_id BigInt       @unique
  username    String       @default("Unknown")
  updated_at  DateTime
  created_at  DateTime     @default(now())
  bookmarks   bookmarks[]
  embeddings  embeddings[]
  folders     folders[]
  thoughts    thoughts[]
}

model folders {
  id         Int         @id @default(autoincrement())
  name       String      @unique @default("Favourites")
  userId     Int         @default(1)
  updated_at DateTime
  created_at DateTime    @default(now())
  bookmarks  bookmarks[]
  users      users       @relation(fields: [userId], references: [id], onDelete: Cascade)
}
